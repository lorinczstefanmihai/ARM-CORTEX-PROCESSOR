
002OperatingModes_Thread_Handler.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000bc  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000d64  080000bc  080000bc  000100bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000bc  08000e20  08000e20  00010e20  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000edc  08000edc  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08000edc  08000edc  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000edc  08000edc  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000edc  08000edc  00010edc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000ee0  08000ee0  00010ee0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  08000ee4  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000030  20000064  08000f48  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000094  08000f48  00020094  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000974  00000000  00000000  0002008c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000339  00000000  00000000  00020a00  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000120  00000000  00000000  00020d40  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000e8  00000000  00000000  00020e60  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002bb0  00000000  00000000  00020f48  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000012e6  00000000  00000000  00023af8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00009213  00000000  00000000  00024dde  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0002dff1  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000009fc  00000000  00000000  0002e044  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000bc <__do_global_dtors_aux>:
 80000bc:	b510      	push	{r4, lr}
 80000be:	4c06      	ldr	r4, [pc, #24]	; (80000d8 <__do_global_dtors_aux+0x1c>)
 80000c0:	7823      	ldrb	r3, [r4, #0]
 80000c2:	2b00      	cmp	r3, #0
 80000c4:	d107      	bne.n	80000d6 <__do_global_dtors_aux+0x1a>
 80000c6:	4b05      	ldr	r3, [pc, #20]	; (80000dc <__do_global_dtors_aux+0x20>)
 80000c8:	2b00      	cmp	r3, #0
 80000ca:	d002      	beq.n	80000d2 <__do_global_dtors_aux+0x16>
 80000cc:	4804      	ldr	r0, [pc, #16]	; (80000e0 <__do_global_dtors_aux+0x24>)
 80000ce:	e000      	b.n	80000d2 <__do_global_dtors_aux+0x16>
 80000d0:	bf00      	nop
 80000d2:	2301      	movs	r3, #1
 80000d4:	7023      	strb	r3, [r4, #0]
 80000d6:	bd10      	pop	{r4, pc}
 80000d8:	20000064 	.word	0x20000064
 80000dc:	00000000 	.word	0x00000000
 80000e0:	08000e08 	.word	0x08000e08

080000e4 <frame_dummy>:
 80000e4:	4b04      	ldr	r3, [pc, #16]	; (80000f8 <frame_dummy+0x14>)
 80000e6:	b510      	push	{r4, lr}
 80000e8:	2b00      	cmp	r3, #0
 80000ea:	d003      	beq.n	80000f4 <frame_dummy+0x10>
 80000ec:	4903      	ldr	r1, [pc, #12]	; (80000fc <frame_dummy+0x18>)
 80000ee:	4804      	ldr	r0, [pc, #16]	; (8000100 <frame_dummy+0x1c>)
 80000f0:	e000      	b.n	80000f4 <frame_dummy+0x10>
 80000f2:	bf00      	nop
 80000f4:	bd10      	pop	{r4, pc}
 80000f6:	46c0      	nop			; (mov r8, r8)
 80000f8:	00000000 	.word	0x00000000
 80000fc:	20000068 	.word	0x20000068
 8000100:	08000e08 	.word	0x08000e08

08000104 <generate_interrupt>:

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

void generate_interrupt(){
 8000104:	b580      	push	{r7, lr}
 8000106:	b082      	sub	sp, #8
 8000108:	af00      	add	r7, sp, #0
	uint32_t *pISER0 = (uint32_t*)0xE000E100;
 800010a:	4b0a      	ldr	r3, [pc, #40]	; (8000134 <generate_interrupt+0x30>)
 800010c:	607b      	str	r3, [r7, #4]
	uint32_t *pISPR  = (uint32_t*)0xE000E200;
 800010e:	4b0a      	ldr	r3, [pc, #40]	; (8000138 <generate_interrupt+0x34>)
 8000110:	603b      	str	r3, [r7, #0]

	//enable IRQ2 interrupt
	*pISER0 |= (1 << 2);
 8000112:	687b      	ldr	r3, [r7, #4]
 8000114:	681b      	ldr	r3, [r3, #0]
 8000116:	2204      	movs	r2, #4
 8000118:	431a      	orrs	r2, r3
 800011a:	687b      	ldr	r3, [r7, #4]
 800011c:	601a      	str	r2, [r3, #0]

	//generate an interrupt from software for IRQ
	*pISPR |= ( 1 << 2 );
 800011e:	683b      	ldr	r3, [r7, #0]
 8000120:	681b      	ldr	r3, [r3, #0]
 8000122:	2204      	movs	r2, #4
 8000124:	431a      	orrs	r2, r3
 8000126:	683b      	ldr	r3, [r7, #0]
 8000128:	601a      	str	r2, [r3, #0]
}
 800012a:	46c0      	nop			; (mov r8, r8)
 800012c:	46bd      	mov	sp, r7
 800012e:	b002      	add	sp, #8
 8000130:	bd80      	pop	{r7, pc}
 8000132:	46c0      	nop			; (mov r8, r8)
 8000134:	e000e100 	.word	0xe000e100
 8000138:	e000e200 	.word	0xe000e200

0800013c <main>:


int main(void)
{
 800013c:	b580      	push	{r7, lr}
 800013e:	af00      	add	r7, sp, #0
	initialise_monitor_handles();
 8000140:	f000 f81c 	bl	800017c <initialise_monitor_handles>

	printf("thread mode: before interrupt \n");
 8000144:	4b05      	ldr	r3, [pc, #20]	; (800015c <main+0x20>)
 8000146:	0018      	movs	r0, r3
 8000148:	f000 f986 	bl	8000458 <puts>
	generate_interrupt();
 800014c:	f7ff ffda 	bl	8000104 <generate_interrupt>
	printf("thread mode: after interrupt \n");
 8000150:	4b03      	ldr	r3, [pc, #12]	; (8000160 <main+0x24>)
 8000152:	0018      	movs	r0, r3
 8000154:	f000 f980 	bl	8000458 <puts>

    /* Loop forever */
	for(;;);
 8000158:	e7fe      	b.n	8000158 <main+0x1c>
 800015a:	46c0      	nop			; (mov r8, r8)
 800015c:	08000e20 	.word	0x08000e20
 8000160:	08000e40 	.word	0x08000e40

08000164 <RTC_TAMP_IRQHandler>:
}

void RTC_TAMP_IRQHandler(void)
{
 8000164:	b580      	push	{r7, lr}
 8000166:	af00      	add	r7, sp, #0
	printf("in handler mode: ISR \n");
 8000168:	4b03      	ldr	r3, [pc, #12]	; (8000178 <RTC_TAMP_IRQHandler+0x14>)
 800016a:	0018      	movs	r0, r3
 800016c:	f000 f974 	bl	8000458 <puts>
}
 8000170:	46c0      	nop			; (mov r8, r8)
 8000172:	46bd      	mov	sp, r7
 8000174:	bd80      	pop	{r7, pc}
 8000176:	46c0      	nop			; (mov r8, r8)
 8000178:	08000e60 	.word	0x08000e60

0800017c <initialise_monitor_handles>:
char **environ = __env;


/* Functions */
void initialise_monitor_handles()
{
 800017c:	b580      	push	{r7, lr}
 800017e:	af00      	add	r7, sp, #0
}
 8000180:	46c0      	nop			; (mov r8, r8)
 8000182:	46bd      	mov	sp, r7
 8000184:	bd80      	pop	{r7, pc}

08000186 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000186:	b580      	push	{r7, lr}
 8000188:	b086      	sub	sp, #24
 800018a:	af00      	add	r7, sp, #0
 800018c:	60f8      	str	r0, [r7, #12]
 800018e:	60b9      	str	r1, [r7, #8]
 8000190:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000192:	2300      	movs	r3, #0
 8000194:	617b      	str	r3, [r7, #20]
 8000196:	e00a      	b.n	80001ae <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8000198:	e000      	b.n	800019c <_read+0x16>
 800019a:	bf00      	nop
 800019c:	0001      	movs	r1, r0
 800019e:	68bb      	ldr	r3, [r7, #8]
 80001a0:	1c5a      	adds	r2, r3, #1
 80001a2:	60ba      	str	r2, [r7, #8]
 80001a4:	b2ca      	uxtb	r2, r1
 80001a6:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80001a8:	697b      	ldr	r3, [r7, #20]
 80001aa:	3301      	adds	r3, #1
 80001ac:	617b      	str	r3, [r7, #20]
 80001ae:	697a      	ldr	r2, [r7, #20]
 80001b0:	687b      	ldr	r3, [r7, #4]
 80001b2:	429a      	cmp	r2, r3
 80001b4:	dbf0      	blt.n	8000198 <_read+0x12>
	}

return len;
 80001b6:	687b      	ldr	r3, [r7, #4]
}
 80001b8:	0018      	movs	r0, r3
 80001ba:	46bd      	mov	sp, r7
 80001bc:	b006      	add	sp, #24
 80001be:	bd80      	pop	{r7, pc}

080001c0 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80001c0:	b580      	push	{r7, lr}
 80001c2:	b086      	sub	sp, #24
 80001c4:	af00      	add	r7, sp, #0
 80001c6:	60f8      	str	r0, [r7, #12]
 80001c8:	60b9      	str	r1, [r7, #8]
 80001ca:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80001cc:	2300      	movs	r3, #0
 80001ce:	617b      	str	r3, [r7, #20]
 80001d0:	e009      	b.n	80001e6 <_write+0x26>
	{
		__io_putchar(*ptr++);
 80001d2:	68bb      	ldr	r3, [r7, #8]
 80001d4:	1c5a      	adds	r2, r3, #1
 80001d6:	60ba      	str	r2, [r7, #8]
 80001d8:	781b      	ldrb	r3, [r3, #0]
 80001da:	0018      	movs	r0, r3
 80001dc:	e000      	b.n	80001e0 <_write+0x20>
 80001de:	bf00      	nop
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80001e0:	697b      	ldr	r3, [r7, #20]
 80001e2:	3301      	adds	r3, #1
 80001e4:	617b      	str	r3, [r7, #20]
 80001e6:	697a      	ldr	r2, [r7, #20]
 80001e8:	687b      	ldr	r3, [r7, #4]
 80001ea:	429a      	cmp	r2, r3
 80001ec:	dbf1      	blt.n	80001d2 <_write+0x12>
	}
	return len;
 80001ee:	687b      	ldr	r3, [r7, #4]
}
 80001f0:	0018      	movs	r0, r3
 80001f2:	46bd      	mov	sp, r7
 80001f4:	b006      	add	sp, #24
 80001f6:	bd80      	pop	{r7, pc}

080001f8 <_close>:

int _close(int file)
{
 80001f8:	b580      	push	{r7, lr}
 80001fa:	b082      	sub	sp, #8
 80001fc:	af00      	add	r7, sp, #0
 80001fe:	6078      	str	r0, [r7, #4]
	return -1;
 8000200:	2301      	movs	r3, #1
 8000202:	425b      	negs	r3, r3
}
 8000204:	0018      	movs	r0, r3
 8000206:	46bd      	mov	sp, r7
 8000208:	b002      	add	sp, #8
 800020a:	bd80      	pop	{r7, pc}

0800020c <_fstat>:


int _fstat(int file, struct stat *st)
{
 800020c:	b580      	push	{r7, lr}
 800020e:	b082      	sub	sp, #8
 8000210:	af00      	add	r7, sp, #0
 8000212:	6078      	str	r0, [r7, #4]
 8000214:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8000216:	683b      	ldr	r3, [r7, #0]
 8000218:	2280      	movs	r2, #128	; 0x80
 800021a:	0192      	lsls	r2, r2, #6
 800021c:	605a      	str	r2, [r3, #4]
	return 0;
 800021e:	2300      	movs	r3, #0
}
 8000220:	0018      	movs	r0, r3
 8000222:	46bd      	mov	sp, r7
 8000224:	b002      	add	sp, #8
 8000226:	bd80      	pop	{r7, pc}

08000228 <_isatty>:

int _isatty(int file)
{
 8000228:	b580      	push	{r7, lr}
 800022a:	b082      	sub	sp, #8
 800022c:	af00      	add	r7, sp, #0
 800022e:	6078      	str	r0, [r7, #4]
	return 1;
 8000230:	2301      	movs	r3, #1
}
 8000232:	0018      	movs	r0, r3
 8000234:	46bd      	mov	sp, r7
 8000236:	b002      	add	sp, #8
 8000238:	bd80      	pop	{r7, pc}

0800023a <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800023a:	b580      	push	{r7, lr}
 800023c:	b084      	sub	sp, #16
 800023e:	af00      	add	r7, sp, #0
 8000240:	60f8      	str	r0, [r7, #12]
 8000242:	60b9      	str	r1, [r7, #8]
 8000244:	607a      	str	r2, [r7, #4]
	return 0;
 8000246:	2300      	movs	r3, #0
}
 8000248:	0018      	movs	r0, r3
 800024a:	46bd      	mov	sp, r7
 800024c:	b004      	add	sp, #16
 800024e:	bd80      	pop	{r7, pc}

08000250 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000250:	b580      	push	{r7, lr}
 8000252:	b086      	sub	sp, #24
 8000254:	af00      	add	r7, sp, #0
 8000256:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000258:	4a14      	ldr	r2, [pc, #80]	; (80002ac <_sbrk+0x5c>)
 800025a:	4b15      	ldr	r3, [pc, #84]	; (80002b0 <_sbrk+0x60>)
 800025c:	1ad3      	subs	r3, r2, r3
 800025e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000260:	697b      	ldr	r3, [r7, #20]
 8000262:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000264:	4b13      	ldr	r3, [pc, #76]	; (80002b4 <_sbrk+0x64>)
 8000266:	681b      	ldr	r3, [r3, #0]
 8000268:	2b00      	cmp	r3, #0
 800026a:	d102      	bne.n	8000272 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 800026c:	4b11      	ldr	r3, [pc, #68]	; (80002b4 <_sbrk+0x64>)
 800026e:	4a12      	ldr	r2, [pc, #72]	; (80002b8 <_sbrk+0x68>)
 8000270:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000272:	4b10      	ldr	r3, [pc, #64]	; (80002b4 <_sbrk+0x64>)
 8000274:	681a      	ldr	r2, [r3, #0]
 8000276:	687b      	ldr	r3, [r7, #4]
 8000278:	18d3      	adds	r3, r2, r3
 800027a:	693a      	ldr	r2, [r7, #16]
 800027c:	429a      	cmp	r2, r3
 800027e:	d207      	bcs.n	8000290 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000280:	f000 f846 	bl	8000310 <__errno>
 8000284:	0003      	movs	r3, r0
 8000286:	220c      	movs	r2, #12
 8000288:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800028a:	2301      	movs	r3, #1
 800028c:	425b      	negs	r3, r3
 800028e:	e009      	b.n	80002a4 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000290:	4b08      	ldr	r3, [pc, #32]	; (80002b4 <_sbrk+0x64>)
 8000292:	681b      	ldr	r3, [r3, #0]
 8000294:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000296:	4b07      	ldr	r3, [pc, #28]	; (80002b4 <_sbrk+0x64>)
 8000298:	681a      	ldr	r2, [r3, #0]
 800029a:	687b      	ldr	r3, [r7, #4]
 800029c:	18d2      	adds	r2, r2, r3
 800029e:	4b05      	ldr	r3, [pc, #20]	; (80002b4 <_sbrk+0x64>)
 80002a0:	601a      	str	r2, [r3, #0]

  return (void *)prev_heap_end;
 80002a2:	68fb      	ldr	r3, [r7, #12]
}
 80002a4:	0018      	movs	r0, r3
 80002a6:	46bd      	mov	sp, r7
 80002a8:	b006      	add	sp, #24
 80002aa:	bd80      	pop	{r7, pc}
 80002ac:	20024000 	.word	0x20024000
 80002b0:	00000400 	.word	0x00000400
 80002b4:	20000080 	.word	0x20000080
 80002b8:	20000098 	.word	0x20000098

080002bc <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002bc:	480d      	ldr	r0, [pc, #52]	; (80002f4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002be:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002c0:	e000      	b.n	80002c4 <Reset_Handler+0x8>
 80002c2:	bf00      	nop

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002c4:	480c      	ldr	r0, [pc, #48]	; (80002f8 <LoopForever+0x6>)
  ldr r1, =_edata
 80002c6:	490d      	ldr	r1, [pc, #52]	; (80002fc <LoopForever+0xa>)
  ldr r2, =_sidata
 80002c8:	4a0d      	ldr	r2, [pc, #52]	; (8000300 <LoopForever+0xe>)
  movs r3, #0
 80002ca:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002cc:	e002      	b.n	80002d4 <LoopCopyDataInit>

080002ce <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002ce:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002d0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002d2:	3304      	adds	r3, #4

080002d4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002d4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002d6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002d8:	d3f9      	bcc.n	80002ce <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002da:	4a0a      	ldr	r2, [pc, #40]	; (8000304 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002dc:	4c0a      	ldr	r4, [pc, #40]	; (8000308 <LoopForever+0x16>)
  movs r3, #0
 80002de:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002e0:	e001      	b.n	80002e6 <LoopFillZerobss>

080002e2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002e2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002e4:	3204      	adds	r2, #4

080002e6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002e6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002e8:	d3fb      	bcc.n	80002e2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002ea:	f000 f817 	bl	800031c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002ee:	f7ff ff25 	bl	800013c <main>

080002f2 <LoopForever>:

LoopForever:
    b LoopForever
 80002f2:	e7fe      	b.n	80002f2 <LoopForever>
  ldr   r0, =_estack
 80002f4:	20024000 	.word	0x20024000
  ldr r0, =_sdata
 80002f8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002fc:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 8000300:	08000ee4 	.word	0x08000ee4
  ldr r2, =_sbss
 8000304:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 8000308:	20000094 	.word	0x20000094

0800030c <ADC_COMP_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800030c:	e7fe      	b.n	800030c <ADC_COMP_IRQHandler>
	...

08000310 <__errno>:
 8000310:	4b01      	ldr	r3, [pc, #4]	; (8000318 <__errno+0x8>)
 8000312:	6818      	ldr	r0, [r3, #0]
 8000314:	4770      	bx	lr
 8000316:	46c0      	nop			; (mov r8, r8)
 8000318:	20000000 	.word	0x20000000

0800031c <__libc_init_array>:
 800031c:	b570      	push	{r4, r5, r6, lr}
 800031e:	2600      	movs	r6, #0
 8000320:	4d0c      	ldr	r5, [pc, #48]	; (8000354 <__libc_init_array+0x38>)
 8000322:	4c0d      	ldr	r4, [pc, #52]	; (8000358 <__libc_init_array+0x3c>)
 8000324:	1b64      	subs	r4, r4, r5
 8000326:	10a4      	asrs	r4, r4, #2
 8000328:	42a6      	cmp	r6, r4
 800032a:	d109      	bne.n	8000340 <__libc_init_array+0x24>
 800032c:	2600      	movs	r6, #0
 800032e:	f000 fd6b 	bl	8000e08 <_init>
 8000332:	4d0a      	ldr	r5, [pc, #40]	; (800035c <__libc_init_array+0x40>)
 8000334:	4c0a      	ldr	r4, [pc, #40]	; (8000360 <__libc_init_array+0x44>)
 8000336:	1b64      	subs	r4, r4, r5
 8000338:	10a4      	asrs	r4, r4, #2
 800033a:	42a6      	cmp	r6, r4
 800033c:	d105      	bne.n	800034a <__libc_init_array+0x2e>
 800033e:	bd70      	pop	{r4, r5, r6, pc}
 8000340:	00b3      	lsls	r3, r6, #2
 8000342:	58eb      	ldr	r3, [r5, r3]
 8000344:	4798      	blx	r3
 8000346:	3601      	adds	r6, #1
 8000348:	e7ee      	b.n	8000328 <__libc_init_array+0xc>
 800034a:	00b3      	lsls	r3, r6, #2
 800034c:	58eb      	ldr	r3, [r5, r3]
 800034e:	4798      	blx	r3
 8000350:	3601      	adds	r6, #1
 8000352:	e7f2      	b.n	800033a <__libc_init_array+0x1e>
 8000354:	08000edc 	.word	0x08000edc
 8000358:	08000edc 	.word	0x08000edc
 800035c:	08000edc 	.word	0x08000edc
 8000360:	08000ee0 	.word	0x08000ee0

08000364 <memset>:
 8000364:	0003      	movs	r3, r0
 8000366:	1882      	adds	r2, r0, r2
 8000368:	4293      	cmp	r3, r2
 800036a:	d100      	bne.n	800036e <memset+0xa>
 800036c:	4770      	bx	lr
 800036e:	7019      	strb	r1, [r3, #0]
 8000370:	3301      	adds	r3, #1
 8000372:	e7f9      	b.n	8000368 <memset+0x4>

08000374 <_puts_r>:
 8000374:	b570      	push	{r4, r5, r6, lr}
 8000376:	0005      	movs	r5, r0
 8000378:	000e      	movs	r6, r1
 800037a:	2800      	cmp	r0, #0
 800037c:	d004      	beq.n	8000388 <_puts_r+0x14>
 800037e:	6983      	ldr	r3, [r0, #24]
 8000380:	2b00      	cmp	r3, #0
 8000382:	d101      	bne.n	8000388 <_puts_r+0x14>
 8000384:	f000 fa6e 	bl	8000864 <__sinit>
 8000388:	69ab      	ldr	r3, [r5, #24]
 800038a:	68ac      	ldr	r4, [r5, #8]
 800038c:	2b00      	cmp	r3, #0
 800038e:	d102      	bne.n	8000396 <_puts_r+0x22>
 8000390:	0028      	movs	r0, r5
 8000392:	f000 fa67 	bl	8000864 <__sinit>
 8000396:	4b2d      	ldr	r3, [pc, #180]	; (800044c <_puts_r+0xd8>)
 8000398:	429c      	cmp	r4, r3
 800039a:	d122      	bne.n	80003e2 <_puts_r+0x6e>
 800039c:	686c      	ldr	r4, [r5, #4]
 800039e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80003a0:	07db      	lsls	r3, r3, #31
 80003a2:	d405      	bmi.n	80003b0 <_puts_r+0x3c>
 80003a4:	89a3      	ldrh	r3, [r4, #12]
 80003a6:	059b      	lsls	r3, r3, #22
 80003a8:	d402      	bmi.n	80003b0 <_puts_r+0x3c>
 80003aa:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80003ac:	f000 fafb 	bl	80009a6 <__retarget_lock_acquire_recursive>
 80003b0:	89a3      	ldrh	r3, [r4, #12]
 80003b2:	071b      	lsls	r3, r3, #28
 80003b4:	d502      	bpl.n	80003bc <_puts_r+0x48>
 80003b6:	6923      	ldr	r3, [r4, #16]
 80003b8:	2b00      	cmp	r3, #0
 80003ba:	d129      	bne.n	8000410 <_puts_r+0x9c>
 80003bc:	0021      	movs	r1, r4
 80003be:	0028      	movs	r0, r5
 80003c0:	f000 f8aa 	bl	8000518 <__swsetup_r>
 80003c4:	2800      	cmp	r0, #0
 80003c6:	d023      	beq.n	8000410 <_puts_r+0x9c>
 80003c8:	2501      	movs	r5, #1
 80003ca:	426d      	negs	r5, r5
 80003cc:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80003ce:	07db      	lsls	r3, r3, #31
 80003d0:	d405      	bmi.n	80003de <_puts_r+0x6a>
 80003d2:	89a3      	ldrh	r3, [r4, #12]
 80003d4:	059b      	lsls	r3, r3, #22
 80003d6:	d402      	bmi.n	80003de <_puts_r+0x6a>
 80003d8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80003da:	f000 fae5 	bl	80009a8 <__retarget_lock_release_recursive>
 80003de:	0028      	movs	r0, r5
 80003e0:	bd70      	pop	{r4, r5, r6, pc}
 80003e2:	4b1b      	ldr	r3, [pc, #108]	; (8000450 <_puts_r+0xdc>)
 80003e4:	429c      	cmp	r4, r3
 80003e6:	d101      	bne.n	80003ec <_puts_r+0x78>
 80003e8:	68ac      	ldr	r4, [r5, #8]
 80003ea:	e7d8      	b.n	800039e <_puts_r+0x2a>
 80003ec:	4b19      	ldr	r3, [pc, #100]	; (8000454 <_puts_r+0xe0>)
 80003ee:	429c      	cmp	r4, r3
 80003f0:	d1d5      	bne.n	800039e <_puts_r+0x2a>
 80003f2:	68ec      	ldr	r4, [r5, #12]
 80003f4:	e7d3      	b.n	800039e <_puts_r+0x2a>
 80003f6:	3601      	adds	r6, #1
 80003f8:	60a3      	str	r3, [r4, #8]
 80003fa:	2b00      	cmp	r3, #0
 80003fc:	da04      	bge.n	8000408 <_puts_r+0x94>
 80003fe:	69a2      	ldr	r2, [r4, #24]
 8000400:	429a      	cmp	r2, r3
 8000402:	dc16      	bgt.n	8000432 <_puts_r+0xbe>
 8000404:	290a      	cmp	r1, #10
 8000406:	d014      	beq.n	8000432 <_puts_r+0xbe>
 8000408:	6823      	ldr	r3, [r4, #0]
 800040a:	1c5a      	adds	r2, r3, #1
 800040c:	6022      	str	r2, [r4, #0]
 800040e:	7019      	strb	r1, [r3, #0]
 8000410:	68a3      	ldr	r3, [r4, #8]
 8000412:	7831      	ldrb	r1, [r6, #0]
 8000414:	3b01      	subs	r3, #1
 8000416:	2900      	cmp	r1, #0
 8000418:	d1ed      	bne.n	80003f6 <_puts_r+0x82>
 800041a:	60a3      	str	r3, [r4, #8]
 800041c:	2b00      	cmp	r3, #0
 800041e:	da0f      	bge.n	8000440 <_puts_r+0xcc>
 8000420:	0028      	movs	r0, r5
 8000422:	0022      	movs	r2, r4
 8000424:	310a      	adds	r1, #10
 8000426:	f000 f821 	bl	800046c <__swbuf_r>
 800042a:	250a      	movs	r5, #10
 800042c:	1c43      	adds	r3, r0, #1
 800042e:	d1cd      	bne.n	80003cc <_puts_r+0x58>
 8000430:	e7ca      	b.n	80003c8 <_puts_r+0x54>
 8000432:	0022      	movs	r2, r4
 8000434:	0028      	movs	r0, r5
 8000436:	f000 f819 	bl	800046c <__swbuf_r>
 800043a:	1c43      	adds	r3, r0, #1
 800043c:	d1e8      	bne.n	8000410 <_puts_r+0x9c>
 800043e:	e7c3      	b.n	80003c8 <_puts_r+0x54>
 8000440:	250a      	movs	r5, #10
 8000442:	6823      	ldr	r3, [r4, #0]
 8000444:	1c5a      	adds	r2, r3, #1
 8000446:	6022      	str	r2, [r4, #0]
 8000448:	701d      	strb	r5, [r3, #0]
 800044a:	e7bf      	b.n	80003cc <_puts_r+0x58>
 800044c:	08000e9c 	.word	0x08000e9c
 8000450:	08000ebc 	.word	0x08000ebc
 8000454:	08000e7c 	.word	0x08000e7c

08000458 <puts>:
 8000458:	b510      	push	{r4, lr}
 800045a:	4b03      	ldr	r3, [pc, #12]	; (8000468 <puts+0x10>)
 800045c:	0001      	movs	r1, r0
 800045e:	6818      	ldr	r0, [r3, #0]
 8000460:	f7ff ff88 	bl	8000374 <_puts_r>
 8000464:	bd10      	pop	{r4, pc}
 8000466:	46c0      	nop			; (mov r8, r8)
 8000468:	20000000 	.word	0x20000000

0800046c <__swbuf_r>:
 800046c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800046e:	0005      	movs	r5, r0
 8000470:	000e      	movs	r6, r1
 8000472:	0014      	movs	r4, r2
 8000474:	2800      	cmp	r0, #0
 8000476:	d004      	beq.n	8000482 <__swbuf_r+0x16>
 8000478:	6983      	ldr	r3, [r0, #24]
 800047a:	2b00      	cmp	r3, #0
 800047c:	d101      	bne.n	8000482 <__swbuf_r+0x16>
 800047e:	f000 f9f1 	bl	8000864 <__sinit>
 8000482:	4b22      	ldr	r3, [pc, #136]	; (800050c <__swbuf_r+0xa0>)
 8000484:	429c      	cmp	r4, r3
 8000486:	d12e      	bne.n	80004e6 <__swbuf_r+0x7a>
 8000488:	686c      	ldr	r4, [r5, #4]
 800048a:	69a3      	ldr	r3, [r4, #24]
 800048c:	60a3      	str	r3, [r4, #8]
 800048e:	89a3      	ldrh	r3, [r4, #12]
 8000490:	071b      	lsls	r3, r3, #28
 8000492:	d532      	bpl.n	80004fa <__swbuf_r+0x8e>
 8000494:	6923      	ldr	r3, [r4, #16]
 8000496:	2b00      	cmp	r3, #0
 8000498:	d02f      	beq.n	80004fa <__swbuf_r+0x8e>
 800049a:	6823      	ldr	r3, [r4, #0]
 800049c:	6922      	ldr	r2, [r4, #16]
 800049e:	b2f7      	uxtb	r7, r6
 80004a0:	1a98      	subs	r0, r3, r2
 80004a2:	6963      	ldr	r3, [r4, #20]
 80004a4:	b2f6      	uxtb	r6, r6
 80004a6:	4283      	cmp	r3, r0
 80004a8:	dc05      	bgt.n	80004b6 <__swbuf_r+0x4a>
 80004aa:	0021      	movs	r1, r4
 80004ac:	0028      	movs	r0, r5
 80004ae:	f000 f937 	bl	8000720 <_fflush_r>
 80004b2:	2800      	cmp	r0, #0
 80004b4:	d127      	bne.n	8000506 <__swbuf_r+0x9a>
 80004b6:	68a3      	ldr	r3, [r4, #8]
 80004b8:	3001      	adds	r0, #1
 80004ba:	3b01      	subs	r3, #1
 80004bc:	60a3      	str	r3, [r4, #8]
 80004be:	6823      	ldr	r3, [r4, #0]
 80004c0:	1c5a      	adds	r2, r3, #1
 80004c2:	6022      	str	r2, [r4, #0]
 80004c4:	701f      	strb	r7, [r3, #0]
 80004c6:	6963      	ldr	r3, [r4, #20]
 80004c8:	4283      	cmp	r3, r0
 80004ca:	d004      	beq.n	80004d6 <__swbuf_r+0x6a>
 80004cc:	89a3      	ldrh	r3, [r4, #12]
 80004ce:	07db      	lsls	r3, r3, #31
 80004d0:	d507      	bpl.n	80004e2 <__swbuf_r+0x76>
 80004d2:	2e0a      	cmp	r6, #10
 80004d4:	d105      	bne.n	80004e2 <__swbuf_r+0x76>
 80004d6:	0021      	movs	r1, r4
 80004d8:	0028      	movs	r0, r5
 80004da:	f000 f921 	bl	8000720 <_fflush_r>
 80004de:	2800      	cmp	r0, #0
 80004e0:	d111      	bne.n	8000506 <__swbuf_r+0x9a>
 80004e2:	0030      	movs	r0, r6
 80004e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80004e6:	4b0a      	ldr	r3, [pc, #40]	; (8000510 <__swbuf_r+0xa4>)
 80004e8:	429c      	cmp	r4, r3
 80004ea:	d101      	bne.n	80004f0 <__swbuf_r+0x84>
 80004ec:	68ac      	ldr	r4, [r5, #8]
 80004ee:	e7cc      	b.n	800048a <__swbuf_r+0x1e>
 80004f0:	4b08      	ldr	r3, [pc, #32]	; (8000514 <__swbuf_r+0xa8>)
 80004f2:	429c      	cmp	r4, r3
 80004f4:	d1c9      	bne.n	800048a <__swbuf_r+0x1e>
 80004f6:	68ec      	ldr	r4, [r5, #12]
 80004f8:	e7c7      	b.n	800048a <__swbuf_r+0x1e>
 80004fa:	0021      	movs	r1, r4
 80004fc:	0028      	movs	r0, r5
 80004fe:	f000 f80b 	bl	8000518 <__swsetup_r>
 8000502:	2800      	cmp	r0, #0
 8000504:	d0c9      	beq.n	800049a <__swbuf_r+0x2e>
 8000506:	2601      	movs	r6, #1
 8000508:	4276      	negs	r6, r6
 800050a:	e7ea      	b.n	80004e2 <__swbuf_r+0x76>
 800050c:	08000e9c 	.word	0x08000e9c
 8000510:	08000ebc 	.word	0x08000ebc
 8000514:	08000e7c 	.word	0x08000e7c

08000518 <__swsetup_r>:
 8000518:	4b37      	ldr	r3, [pc, #220]	; (80005f8 <__swsetup_r+0xe0>)
 800051a:	b570      	push	{r4, r5, r6, lr}
 800051c:	681d      	ldr	r5, [r3, #0]
 800051e:	0006      	movs	r6, r0
 8000520:	000c      	movs	r4, r1
 8000522:	2d00      	cmp	r5, #0
 8000524:	d005      	beq.n	8000532 <__swsetup_r+0x1a>
 8000526:	69ab      	ldr	r3, [r5, #24]
 8000528:	2b00      	cmp	r3, #0
 800052a:	d102      	bne.n	8000532 <__swsetup_r+0x1a>
 800052c:	0028      	movs	r0, r5
 800052e:	f000 f999 	bl	8000864 <__sinit>
 8000532:	4b32      	ldr	r3, [pc, #200]	; (80005fc <__swsetup_r+0xe4>)
 8000534:	429c      	cmp	r4, r3
 8000536:	d10f      	bne.n	8000558 <__swsetup_r+0x40>
 8000538:	686c      	ldr	r4, [r5, #4]
 800053a:	230c      	movs	r3, #12
 800053c:	5ee2      	ldrsh	r2, [r4, r3]
 800053e:	b293      	uxth	r3, r2
 8000540:	0711      	lsls	r1, r2, #28
 8000542:	d42d      	bmi.n	80005a0 <__swsetup_r+0x88>
 8000544:	06d9      	lsls	r1, r3, #27
 8000546:	d411      	bmi.n	800056c <__swsetup_r+0x54>
 8000548:	2309      	movs	r3, #9
 800054a:	2001      	movs	r0, #1
 800054c:	6033      	str	r3, [r6, #0]
 800054e:	3337      	adds	r3, #55	; 0x37
 8000550:	4313      	orrs	r3, r2
 8000552:	81a3      	strh	r3, [r4, #12]
 8000554:	4240      	negs	r0, r0
 8000556:	bd70      	pop	{r4, r5, r6, pc}
 8000558:	4b29      	ldr	r3, [pc, #164]	; (8000600 <__swsetup_r+0xe8>)
 800055a:	429c      	cmp	r4, r3
 800055c:	d101      	bne.n	8000562 <__swsetup_r+0x4a>
 800055e:	68ac      	ldr	r4, [r5, #8]
 8000560:	e7eb      	b.n	800053a <__swsetup_r+0x22>
 8000562:	4b28      	ldr	r3, [pc, #160]	; (8000604 <__swsetup_r+0xec>)
 8000564:	429c      	cmp	r4, r3
 8000566:	d1e8      	bne.n	800053a <__swsetup_r+0x22>
 8000568:	68ec      	ldr	r4, [r5, #12]
 800056a:	e7e6      	b.n	800053a <__swsetup_r+0x22>
 800056c:	075b      	lsls	r3, r3, #29
 800056e:	d513      	bpl.n	8000598 <__swsetup_r+0x80>
 8000570:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000572:	2900      	cmp	r1, #0
 8000574:	d008      	beq.n	8000588 <__swsetup_r+0x70>
 8000576:	0023      	movs	r3, r4
 8000578:	3344      	adds	r3, #68	; 0x44
 800057a:	4299      	cmp	r1, r3
 800057c:	d002      	beq.n	8000584 <__swsetup_r+0x6c>
 800057e:	0030      	movs	r0, r6
 8000580:	f000 fa80 	bl	8000a84 <_free_r>
 8000584:	2300      	movs	r3, #0
 8000586:	6363      	str	r3, [r4, #52]	; 0x34
 8000588:	2224      	movs	r2, #36	; 0x24
 800058a:	89a3      	ldrh	r3, [r4, #12]
 800058c:	4393      	bics	r3, r2
 800058e:	81a3      	strh	r3, [r4, #12]
 8000590:	2300      	movs	r3, #0
 8000592:	6063      	str	r3, [r4, #4]
 8000594:	6923      	ldr	r3, [r4, #16]
 8000596:	6023      	str	r3, [r4, #0]
 8000598:	2308      	movs	r3, #8
 800059a:	89a2      	ldrh	r2, [r4, #12]
 800059c:	4313      	orrs	r3, r2
 800059e:	81a3      	strh	r3, [r4, #12]
 80005a0:	6923      	ldr	r3, [r4, #16]
 80005a2:	2b00      	cmp	r3, #0
 80005a4:	d10b      	bne.n	80005be <__swsetup_r+0xa6>
 80005a6:	21a0      	movs	r1, #160	; 0xa0
 80005a8:	2280      	movs	r2, #128	; 0x80
 80005aa:	89a3      	ldrh	r3, [r4, #12]
 80005ac:	0089      	lsls	r1, r1, #2
 80005ae:	0092      	lsls	r2, r2, #2
 80005b0:	400b      	ands	r3, r1
 80005b2:	4293      	cmp	r3, r2
 80005b4:	d003      	beq.n	80005be <__swsetup_r+0xa6>
 80005b6:	0021      	movs	r1, r4
 80005b8:	0030      	movs	r0, r6
 80005ba:	f000 fa1f 	bl	80009fc <__smakebuf_r>
 80005be:	220c      	movs	r2, #12
 80005c0:	5ea3      	ldrsh	r3, [r4, r2]
 80005c2:	2001      	movs	r0, #1
 80005c4:	001a      	movs	r2, r3
 80005c6:	b299      	uxth	r1, r3
 80005c8:	4002      	ands	r2, r0
 80005ca:	4203      	tst	r3, r0
 80005cc:	d00f      	beq.n	80005ee <__swsetup_r+0xd6>
 80005ce:	2200      	movs	r2, #0
 80005d0:	60a2      	str	r2, [r4, #8]
 80005d2:	6962      	ldr	r2, [r4, #20]
 80005d4:	4252      	negs	r2, r2
 80005d6:	61a2      	str	r2, [r4, #24]
 80005d8:	2000      	movs	r0, #0
 80005da:	6922      	ldr	r2, [r4, #16]
 80005dc:	4282      	cmp	r2, r0
 80005de:	d1ba      	bne.n	8000556 <__swsetup_r+0x3e>
 80005e0:	060a      	lsls	r2, r1, #24
 80005e2:	d5b8      	bpl.n	8000556 <__swsetup_r+0x3e>
 80005e4:	2240      	movs	r2, #64	; 0x40
 80005e6:	4313      	orrs	r3, r2
 80005e8:	81a3      	strh	r3, [r4, #12]
 80005ea:	3801      	subs	r0, #1
 80005ec:	e7b3      	b.n	8000556 <__swsetup_r+0x3e>
 80005ee:	0788      	lsls	r0, r1, #30
 80005f0:	d400      	bmi.n	80005f4 <__swsetup_r+0xdc>
 80005f2:	6962      	ldr	r2, [r4, #20]
 80005f4:	60a2      	str	r2, [r4, #8]
 80005f6:	e7ef      	b.n	80005d8 <__swsetup_r+0xc0>
 80005f8:	20000000 	.word	0x20000000
 80005fc:	08000e9c 	.word	0x08000e9c
 8000600:	08000ebc 	.word	0x08000ebc
 8000604:	08000e7c 	.word	0x08000e7c

08000608 <__sflush_r>:
 8000608:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800060a:	898b      	ldrh	r3, [r1, #12]
 800060c:	0005      	movs	r5, r0
 800060e:	000c      	movs	r4, r1
 8000610:	071a      	lsls	r2, r3, #28
 8000612:	d45f      	bmi.n	80006d4 <__sflush_r+0xcc>
 8000614:	684a      	ldr	r2, [r1, #4]
 8000616:	2a00      	cmp	r2, #0
 8000618:	dc04      	bgt.n	8000624 <__sflush_r+0x1c>
 800061a:	6c0a      	ldr	r2, [r1, #64]	; 0x40
 800061c:	2a00      	cmp	r2, #0
 800061e:	dc01      	bgt.n	8000624 <__sflush_r+0x1c>
 8000620:	2000      	movs	r0, #0
 8000622:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8000624:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8000626:	2f00      	cmp	r7, #0
 8000628:	d0fa      	beq.n	8000620 <__sflush_r+0x18>
 800062a:	2200      	movs	r2, #0
 800062c:	2180      	movs	r1, #128	; 0x80
 800062e:	682e      	ldr	r6, [r5, #0]
 8000630:	602a      	str	r2, [r5, #0]
 8000632:	001a      	movs	r2, r3
 8000634:	0149      	lsls	r1, r1, #5
 8000636:	400a      	ands	r2, r1
 8000638:	420b      	tst	r3, r1
 800063a:	d034      	beq.n	80006a6 <__sflush_r+0x9e>
 800063c:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800063e:	89a3      	ldrh	r3, [r4, #12]
 8000640:	075b      	lsls	r3, r3, #29
 8000642:	d506      	bpl.n	8000652 <__sflush_r+0x4a>
 8000644:	6863      	ldr	r3, [r4, #4]
 8000646:	1ac0      	subs	r0, r0, r3
 8000648:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800064a:	2b00      	cmp	r3, #0
 800064c:	d001      	beq.n	8000652 <__sflush_r+0x4a>
 800064e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000650:	1ac0      	subs	r0, r0, r3
 8000652:	0002      	movs	r2, r0
 8000654:	6a21      	ldr	r1, [r4, #32]
 8000656:	2300      	movs	r3, #0
 8000658:	0028      	movs	r0, r5
 800065a:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 800065c:	47b8      	blx	r7
 800065e:	89a1      	ldrh	r1, [r4, #12]
 8000660:	1c43      	adds	r3, r0, #1
 8000662:	d106      	bne.n	8000672 <__sflush_r+0x6a>
 8000664:	682b      	ldr	r3, [r5, #0]
 8000666:	2b1d      	cmp	r3, #29
 8000668:	d831      	bhi.n	80006ce <__sflush_r+0xc6>
 800066a:	4a2c      	ldr	r2, [pc, #176]	; (800071c <__sflush_r+0x114>)
 800066c:	40da      	lsrs	r2, r3
 800066e:	07d3      	lsls	r3, r2, #31
 8000670:	d52d      	bpl.n	80006ce <__sflush_r+0xc6>
 8000672:	2300      	movs	r3, #0
 8000674:	6063      	str	r3, [r4, #4]
 8000676:	6923      	ldr	r3, [r4, #16]
 8000678:	6023      	str	r3, [r4, #0]
 800067a:	04cb      	lsls	r3, r1, #19
 800067c:	d505      	bpl.n	800068a <__sflush_r+0x82>
 800067e:	1c43      	adds	r3, r0, #1
 8000680:	d102      	bne.n	8000688 <__sflush_r+0x80>
 8000682:	682b      	ldr	r3, [r5, #0]
 8000684:	2b00      	cmp	r3, #0
 8000686:	d100      	bne.n	800068a <__sflush_r+0x82>
 8000688:	6560      	str	r0, [r4, #84]	; 0x54
 800068a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800068c:	602e      	str	r6, [r5, #0]
 800068e:	2900      	cmp	r1, #0
 8000690:	d0c6      	beq.n	8000620 <__sflush_r+0x18>
 8000692:	0023      	movs	r3, r4
 8000694:	3344      	adds	r3, #68	; 0x44
 8000696:	4299      	cmp	r1, r3
 8000698:	d002      	beq.n	80006a0 <__sflush_r+0x98>
 800069a:	0028      	movs	r0, r5
 800069c:	f000 f9f2 	bl	8000a84 <_free_r>
 80006a0:	2000      	movs	r0, #0
 80006a2:	6360      	str	r0, [r4, #52]	; 0x34
 80006a4:	e7bd      	b.n	8000622 <__sflush_r+0x1a>
 80006a6:	2301      	movs	r3, #1
 80006a8:	0028      	movs	r0, r5
 80006aa:	6a21      	ldr	r1, [r4, #32]
 80006ac:	47b8      	blx	r7
 80006ae:	1c43      	adds	r3, r0, #1
 80006b0:	d1c5      	bne.n	800063e <__sflush_r+0x36>
 80006b2:	682b      	ldr	r3, [r5, #0]
 80006b4:	2b00      	cmp	r3, #0
 80006b6:	d0c2      	beq.n	800063e <__sflush_r+0x36>
 80006b8:	2b1d      	cmp	r3, #29
 80006ba:	d001      	beq.n	80006c0 <__sflush_r+0xb8>
 80006bc:	2b16      	cmp	r3, #22
 80006be:	d101      	bne.n	80006c4 <__sflush_r+0xbc>
 80006c0:	602e      	str	r6, [r5, #0]
 80006c2:	e7ad      	b.n	8000620 <__sflush_r+0x18>
 80006c4:	2340      	movs	r3, #64	; 0x40
 80006c6:	89a2      	ldrh	r2, [r4, #12]
 80006c8:	4313      	orrs	r3, r2
 80006ca:	81a3      	strh	r3, [r4, #12]
 80006cc:	e7a9      	b.n	8000622 <__sflush_r+0x1a>
 80006ce:	2340      	movs	r3, #64	; 0x40
 80006d0:	430b      	orrs	r3, r1
 80006d2:	e7fa      	b.n	80006ca <__sflush_r+0xc2>
 80006d4:	690f      	ldr	r7, [r1, #16]
 80006d6:	2f00      	cmp	r7, #0
 80006d8:	d0a2      	beq.n	8000620 <__sflush_r+0x18>
 80006da:	680a      	ldr	r2, [r1, #0]
 80006dc:	600f      	str	r7, [r1, #0]
 80006de:	1bd2      	subs	r2, r2, r7
 80006e0:	9201      	str	r2, [sp, #4]
 80006e2:	2200      	movs	r2, #0
 80006e4:	079b      	lsls	r3, r3, #30
 80006e6:	d100      	bne.n	80006ea <__sflush_r+0xe2>
 80006e8:	694a      	ldr	r2, [r1, #20]
 80006ea:	60a2      	str	r2, [r4, #8]
 80006ec:	9b01      	ldr	r3, [sp, #4]
 80006ee:	2b00      	cmp	r3, #0
 80006f0:	dc00      	bgt.n	80006f4 <__sflush_r+0xec>
 80006f2:	e795      	b.n	8000620 <__sflush_r+0x18>
 80006f4:	003a      	movs	r2, r7
 80006f6:	0028      	movs	r0, r5
 80006f8:	9b01      	ldr	r3, [sp, #4]
 80006fa:	6a21      	ldr	r1, [r4, #32]
 80006fc:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80006fe:	47b0      	blx	r6
 8000700:	2800      	cmp	r0, #0
 8000702:	dc06      	bgt.n	8000712 <__sflush_r+0x10a>
 8000704:	2340      	movs	r3, #64	; 0x40
 8000706:	2001      	movs	r0, #1
 8000708:	89a2      	ldrh	r2, [r4, #12]
 800070a:	4240      	negs	r0, r0
 800070c:	4313      	orrs	r3, r2
 800070e:	81a3      	strh	r3, [r4, #12]
 8000710:	e787      	b.n	8000622 <__sflush_r+0x1a>
 8000712:	9b01      	ldr	r3, [sp, #4]
 8000714:	183f      	adds	r7, r7, r0
 8000716:	1a1b      	subs	r3, r3, r0
 8000718:	9301      	str	r3, [sp, #4]
 800071a:	e7e7      	b.n	80006ec <__sflush_r+0xe4>
 800071c:	20400001 	.word	0x20400001

08000720 <_fflush_r>:
 8000720:	690b      	ldr	r3, [r1, #16]
 8000722:	b570      	push	{r4, r5, r6, lr}
 8000724:	0005      	movs	r5, r0
 8000726:	000c      	movs	r4, r1
 8000728:	2b00      	cmp	r3, #0
 800072a:	d102      	bne.n	8000732 <_fflush_r+0x12>
 800072c:	2500      	movs	r5, #0
 800072e:	0028      	movs	r0, r5
 8000730:	bd70      	pop	{r4, r5, r6, pc}
 8000732:	2800      	cmp	r0, #0
 8000734:	d004      	beq.n	8000740 <_fflush_r+0x20>
 8000736:	6983      	ldr	r3, [r0, #24]
 8000738:	2b00      	cmp	r3, #0
 800073a:	d101      	bne.n	8000740 <_fflush_r+0x20>
 800073c:	f000 f892 	bl	8000864 <__sinit>
 8000740:	4b14      	ldr	r3, [pc, #80]	; (8000794 <_fflush_r+0x74>)
 8000742:	429c      	cmp	r4, r3
 8000744:	d11b      	bne.n	800077e <_fflush_r+0x5e>
 8000746:	686c      	ldr	r4, [r5, #4]
 8000748:	220c      	movs	r2, #12
 800074a:	5ea3      	ldrsh	r3, [r4, r2]
 800074c:	2b00      	cmp	r3, #0
 800074e:	d0ed      	beq.n	800072c <_fflush_r+0xc>
 8000750:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8000752:	07d2      	lsls	r2, r2, #31
 8000754:	d404      	bmi.n	8000760 <_fflush_r+0x40>
 8000756:	059b      	lsls	r3, r3, #22
 8000758:	d402      	bmi.n	8000760 <_fflush_r+0x40>
 800075a:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800075c:	f000 f923 	bl	80009a6 <__retarget_lock_acquire_recursive>
 8000760:	0028      	movs	r0, r5
 8000762:	0021      	movs	r1, r4
 8000764:	f7ff ff50 	bl	8000608 <__sflush_r>
 8000768:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800076a:	0005      	movs	r5, r0
 800076c:	07db      	lsls	r3, r3, #31
 800076e:	d4de      	bmi.n	800072e <_fflush_r+0xe>
 8000770:	89a3      	ldrh	r3, [r4, #12]
 8000772:	059b      	lsls	r3, r3, #22
 8000774:	d4db      	bmi.n	800072e <_fflush_r+0xe>
 8000776:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000778:	f000 f916 	bl	80009a8 <__retarget_lock_release_recursive>
 800077c:	e7d7      	b.n	800072e <_fflush_r+0xe>
 800077e:	4b06      	ldr	r3, [pc, #24]	; (8000798 <_fflush_r+0x78>)
 8000780:	429c      	cmp	r4, r3
 8000782:	d101      	bne.n	8000788 <_fflush_r+0x68>
 8000784:	68ac      	ldr	r4, [r5, #8]
 8000786:	e7df      	b.n	8000748 <_fflush_r+0x28>
 8000788:	4b04      	ldr	r3, [pc, #16]	; (800079c <_fflush_r+0x7c>)
 800078a:	429c      	cmp	r4, r3
 800078c:	d1dc      	bne.n	8000748 <_fflush_r+0x28>
 800078e:	68ec      	ldr	r4, [r5, #12]
 8000790:	e7da      	b.n	8000748 <_fflush_r+0x28>
 8000792:	46c0      	nop			; (mov r8, r8)
 8000794:	08000e9c 	.word	0x08000e9c
 8000798:	08000ebc 	.word	0x08000ebc
 800079c:	08000e7c 	.word	0x08000e7c

080007a0 <std>:
 80007a0:	2300      	movs	r3, #0
 80007a2:	b510      	push	{r4, lr}
 80007a4:	0004      	movs	r4, r0
 80007a6:	6003      	str	r3, [r0, #0]
 80007a8:	6043      	str	r3, [r0, #4]
 80007aa:	6083      	str	r3, [r0, #8]
 80007ac:	8181      	strh	r1, [r0, #12]
 80007ae:	6643      	str	r3, [r0, #100]	; 0x64
 80007b0:	0019      	movs	r1, r3
 80007b2:	81c2      	strh	r2, [r0, #14]
 80007b4:	6103      	str	r3, [r0, #16]
 80007b6:	6143      	str	r3, [r0, #20]
 80007b8:	6183      	str	r3, [r0, #24]
 80007ba:	2208      	movs	r2, #8
 80007bc:	305c      	adds	r0, #92	; 0x5c
 80007be:	f7ff fdd1 	bl	8000364 <memset>
 80007c2:	4b05      	ldr	r3, [pc, #20]	; (80007d8 <std+0x38>)
 80007c4:	6224      	str	r4, [r4, #32]
 80007c6:	6263      	str	r3, [r4, #36]	; 0x24
 80007c8:	4b04      	ldr	r3, [pc, #16]	; (80007dc <std+0x3c>)
 80007ca:	62a3      	str	r3, [r4, #40]	; 0x28
 80007cc:	4b04      	ldr	r3, [pc, #16]	; (80007e0 <std+0x40>)
 80007ce:	62e3      	str	r3, [r4, #44]	; 0x2c
 80007d0:	4b04      	ldr	r3, [pc, #16]	; (80007e4 <std+0x44>)
 80007d2:	6323      	str	r3, [r4, #48]	; 0x30
 80007d4:	bd10      	pop	{r4, pc}
 80007d6:	46c0      	nop			; (mov r8, r8)
 80007d8:	08000c6d 	.word	0x08000c6d
 80007dc:	08000c95 	.word	0x08000c95
 80007e0:	08000ccd 	.word	0x08000ccd
 80007e4:	08000cf9 	.word	0x08000cf9

080007e8 <_cleanup_r>:
 80007e8:	b510      	push	{r4, lr}
 80007ea:	4902      	ldr	r1, [pc, #8]	; (80007f4 <_cleanup_r+0xc>)
 80007ec:	f000 f8ba 	bl	8000964 <_fwalk_reent>
 80007f0:	bd10      	pop	{r4, pc}
 80007f2:	46c0      	nop			; (mov r8, r8)
 80007f4:	08000721 	.word	0x08000721

080007f8 <__sfmoreglue>:
 80007f8:	b570      	push	{r4, r5, r6, lr}
 80007fa:	2568      	movs	r5, #104	; 0x68
 80007fc:	1e4a      	subs	r2, r1, #1
 80007fe:	4355      	muls	r5, r2
 8000800:	000e      	movs	r6, r1
 8000802:	0029      	movs	r1, r5
 8000804:	3174      	adds	r1, #116	; 0x74
 8000806:	f000 f9a9 	bl	8000b5c <_malloc_r>
 800080a:	1e04      	subs	r4, r0, #0
 800080c:	d008      	beq.n	8000820 <__sfmoreglue+0x28>
 800080e:	2100      	movs	r1, #0
 8000810:	002a      	movs	r2, r5
 8000812:	6001      	str	r1, [r0, #0]
 8000814:	6046      	str	r6, [r0, #4]
 8000816:	300c      	adds	r0, #12
 8000818:	60a0      	str	r0, [r4, #8]
 800081a:	3268      	adds	r2, #104	; 0x68
 800081c:	f7ff fda2 	bl	8000364 <memset>
 8000820:	0020      	movs	r0, r4
 8000822:	bd70      	pop	{r4, r5, r6, pc}

08000824 <__sfp_lock_acquire>:
 8000824:	b510      	push	{r4, lr}
 8000826:	4802      	ldr	r0, [pc, #8]	; (8000830 <__sfp_lock_acquire+0xc>)
 8000828:	f000 f8bd 	bl	80009a6 <__retarget_lock_acquire_recursive>
 800082c:	bd10      	pop	{r4, pc}
 800082e:	46c0      	nop			; (mov r8, r8)
 8000830:	20000085 	.word	0x20000085

08000834 <__sfp_lock_release>:
 8000834:	b510      	push	{r4, lr}
 8000836:	4802      	ldr	r0, [pc, #8]	; (8000840 <__sfp_lock_release+0xc>)
 8000838:	f000 f8b6 	bl	80009a8 <__retarget_lock_release_recursive>
 800083c:	bd10      	pop	{r4, pc}
 800083e:	46c0      	nop			; (mov r8, r8)
 8000840:	20000085 	.word	0x20000085

08000844 <__sinit_lock_acquire>:
 8000844:	b510      	push	{r4, lr}
 8000846:	4802      	ldr	r0, [pc, #8]	; (8000850 <__sinit_lock_acquire+0xc>)
 8000848:	f000 f8ad 	bl	80009a6 <__retarget_lock_acquire_recursive>
 800084c:	bd10      	pop	{r4, pc}
 800084e:	46c0      	nop			; (mov r8, r8)
 8000850:	20000086 	.word	0x20000086

08000854 <__sinit_lock_release>:
 8000854:	b510      	push	{r4, lr}
 8000856:	4802      	ldr	r0, [pc, #8]	; (8000860 <__sinit_lock_release+0xc>)
 8000858:	f000 f8a6 	bl	80009a8 <__retarget_lock_release_recursive>
 800085c:	bd10      	pop	{r4, pc}
 800085e:	46c0      	nop			; (mov r8, r8)
 8000860:	20000086 	.word	0x20000086

08000864 <__sinit>:
 8000864:	b513      	push	{r0, r1, r4, lr}
 8000866:	0004      	movs	r4, r0
 8000868:	f7ff ffec 	bl	8000844 <__sinit_lock_acquire>
 800086c:	69a3      	ldr	r3, [r4, #24]
 800086e:	2b00      	cmp	r3, #0
 8000870:	d002      	beq.n	8000878 <__sinit+0x14>
 8000872:	f7ff ffef 	bl	8000854 <__sinit_lock_release>
 8000876:	bd13      	pop	{r0, r1, r4, pc}
 8000878:	64a3      	str	r3, [r4, #72]	; 0x48
 800087a:	64e3      	str	r3, [r4, #76]	; 0x4c
 800087c:	6523      	str	r3, [r4, #80]	; 0x50
 800087e:	4b13      	ldr	r3, [pc, #76]	; (80008cc <__sinit+0x68>)
 8000880:	4a13      	ldr	r2, [pc, #76]	; (80008d0 <__sinit+0x6c>)
 8000882:	681b      	ldr	r3, [r3, #0]
 8000884:	62a2      	str	r2, [r4, #40]	; 0x28
 8000886:	9301      	str	r3, [sp, #4]
 8000888:	42a3      	cmp	r3, r4
 800088a:	d101      	bne.n	8000890 <__sinit+0x2c>
 800088c:	2301      	movs	r3, #1
 800088e:	61a3      	str	r3, [r4, #24]
 8000890:	0020      	movs	r0, r4
 8000892:	f000 f81f 	bl	80008d4 <__sfp>
 8000896:	6060      	str	r0, [r4, #4]
 8000898:	0020      	movs	r0, r4
 800089a:	f000 f81b 	bl	80008d4 <__sfp>
 800089e:	60a0      	str	r0, [r4, #8]
 80008a0:	0020      	movs	r0, r4
 80008a2:	f000 f817 	bl	80008d4 <__sfp>
 80008a6:	2200      	movs	r2, #0
 80008a8:	2104      	movs	r1, #4
 80008aa:	60e0      	str	r0, [r4, #12]
 80008ac:	6860      	ldr	r0, [r4, #4]
 80008ae:	f7ff ff77 	bl	80007a0 <std>
 80008b2:	2201      	movs	r2, #1
 80008b4:	2109      	movs	r1, #9
 80008b6:	68a0      	ldr	r0, [r4, #8]
 80008b8:	f7ff ff72 	bl	80007a0 <std>
 80008bc:	2202      	movs	r2, #2
 80008be:	2112      	movs	r1, #18
 80008c0:	68e0      	ldr	r0, [r4, #12]
 80008c2:	f7ff ff6d 	bl	80007a0 <std>
 80008c6:	2301      	movs	r3, #1
 80008c8:	61a3      	str	r3, [r4, #24]
 80008ca:	e7d2      	b.n	8000872 <__sinit+0xe>
 80008cc:	08000e78 	.word	0x08000e78
 80008d0:	080007e9 	.word	0x080007e9

080008d4 <__sfp>:
 80008d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008d6:	0007      	movs	r7, r0
 80008d8:	f7ff ffa4 	bl	8000824 <__sfp_lock_acquire>
 80008dc:	4b1f      	ldr	r3, [pc, #124]	; (800095c <__sfp+0x88>)
 80008de:	681e      	ldr	r6, [r3, #0]
 80008e0:	69b3      	ldr	r3, [r6, #24]
 80008e2:	2b00      	cmp	r3, #0
 80008e4:	d102      	bne.n	80008ec <__sfp+0x18>
 80008e6:	0030      	movs	r0, r6
 80008e8:	f7ff ffbc 	bl	8000864 <__sinit>
 80008ec:	3648      	adds	r6, #72	; 0x48
 80008ee:	68b4      	ldr	r4, [r6, #8]
 80008f0:	6873      	ldr	r3, [r6, #4]
 80008f2:	3b01      	subs	r3, #1
 80008f4:	d504      	bpl.n	8000900 <__sfp+0x2c>
 80008f6:	6833      	ldr	r3, [r6, #0]
 80008f8:	2b00      	cmp	r3, #0
 80008fa:	d022      	beq.n	8000942 <__sfp+0x6e>
 80008fc:	6836      	ldr	r6, [r6, #0]
 80008fe:	e7f6      	b.n	80008ee <__sfp+0x1a>
 8000900:	220c      	movs	r2, #12
 8000902:	5ea5      	ldrsh	r5, [r4, r2]
 8000904:	2d00      	cmp	r5, #0
 8000906:	d11a      	bne.n	800093e <__sfp+0x6a>
 8000908:	0020      	movs	r0, r4
 800090a:	4b15      	ldr	r3, [pc, #84]	; (8000960 <__sfp+0x8c>)
 800090c:	3058      	adds	r0, #88	; 0x58
 800090e:	60e3      	str	r3, [r4, #12]
 8000910:	6665      	str	r5, [r4, #100]	; 0x64
 8000912:	f000 f847 	bl	80009a4 <__retarget_lock_init_recursive>
 8000916:	f7ff ff8d 	bl	8000834 <__sfp_lock_release>
 800091a:	0020      	movs	r0, r4
 800091c:	2208      	movs	r2, #8
 800091e:	0029      	movs	r1, r5
 8000920:	6025      	str	r5, [r4, #0]
 8000922:	60a5      	str	r5, [r4, #8]
 8000924:	6065      	str	r5, [r4, #4]
 8000926:	6125      	str	r5, [r4, #16]
 8000928:	6165      	str	r5, [r4, #20]
 800092a:	61a5      	str	r5, [r4, #24]
 800092c:	305c      	adds	r0, #92	; 0x5c
 800092e:	f7ff fd19 	bl	8000364 <memset>
 8000932:	6365      	str	r5, [r4, #52]	; 0x34
 8000934:	63a5      	str	r5, [r4, #56]	; 0x38
 8000936:	64a5      	str	r5, [r4, #72]	; 0x48
 8000938:	64e5      	str	r5, [r4, #76]	; 0x4c
 800093a:	0020      	movs	r0, r4
 800093c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800093e:	3468      	adds	r4, #104	; 0x68
 8000940:	e7d7      	b.n	80008f2 <__sfp+0x1e>
 8000942:	2104      	movs	r1, #4
 8000944:	0038      	movs	r0, r7
 8000946:	f7ff ff57 	bl	80007f8 <__sfmoreglue>
 800094a:	1e04      	subs	r4, r0, #0
 800094c:	6030      	str	r0, [r6, #0]
 800094e:	d1d5      	bne.n	80008fc <__sfp+0x28>
 8000950:	f7ff ff70 	bl	8000834 <__sfp_lock_release>
 8000954:	230c      	movs	r3, #12
 8000956:	603b      	str	r3, [r7, #0]
 8000958:	e7ef      	b.n	800093a <__sfp+0x66>
 800095a:	46c0      	nop			; (mov r8, r8)
 800095c:	08000e78 	.word	0x08000e78
 8000960:	ffff0001 	.word	0xffff0001

08000964 <_fwalk_reent>:
 8000964:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000966:	0004      	movs	r4, r0
 8000968:	0006      	movs	r6, r0
 800096a:	2700      	movs	r7, #0
 800096c:	9101      	str	r1, [sp, #4]
 800096e:	3448      	adds	r4, #72	; 0x48
 8000970:	6863      	ldr	r3, [r4, #4]
 8000972:	68a5      	ldr	r5, [r4, #8]
 8000974:	9300      	str	r3, [sp, #0]
 8000976:	9b00      	ldr	r3, [sp, #0]
 8000978:	3b01      	subs	r3, #1
 800097a:	9300      	str	r3, [sp, #0]
 800097c:	d504      	bpl.n	8000988 <_fwalk_reent+0x24>
 800097e:	6824      	ldr	r4, [r4, #0]
 8000980:	2c00      	cmp	r4, #0
 8000982:	d1f5      	bne.n	8000970 <_fwalk_reent+0xc>
 8000984:	0038      	movs	r0, r7
 8000986:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8000988:	89ab      	ldrh	r3, [r5, #12]
 800098a:	2b01      	cmp	r3, #1
 800098c:	d908      	bls.n	80009a0 <_fwalk_reent+0x3c>
 800098e:	220e      	movs	r2, #14
 8000990:	5eab      	ldrsh	r3, [r5, r2]
 8000992:	3301      	adds	r3, #1
 8000994:	d004      	beq.n	80009a0 <_fwalk_reent+0x3c>
 8000996:	0029      	movs	r1, r5
 8000998:	0030      	movs	r0, r6
 800099a:	9b01      	ldr	r3, [sp, #4]
 800099c:	4798      	blx	r3
 800099e:	4307      	orrs	r7, r0
 80009a0:	3568      	adds	r5, #104	; 0x68
 80009a2:	e7e8      	b.n	8000976 <_fwalk_reent+0x12>

080009a4 <__retarget_lock_init_recursive>:
 80009a4:	4770      	bx	lr

080009a6 <__retarget_lock_acquire_recursive>:
 80009a6:	4770      	bx	lr

080009a8 <__retarget_lock_release_recursive>:
 80009a8:	4770      	bx	lr
	...

080009ac <__swhatbuf_r>:
 80009ac:	b570      	push	{r4, r5, r6, lr}
 80009ae:	000e      	movs	r6, r1
 80009b0:	001d      	movs	r5, r3
 80009b2:	230e      	movs	r3, #14
 80009b4:	5ec9      	ldrsh	r1, [r1, r3]
 80009b6:	0014      	movs	r4, r2
 80009b8:	b096      	sub	sp, #88	; 0x58
 80009ba:	2900      	cmp	r1, #0
 80009bc:	da08      	bge.n	80009d0 <__swhatbuf_r+0x24>
 80009be:	220c      	movs	r2, #12
 80009c0:	5eb3      	ldrsh	r3, [r6, r2]
 80009c2:	2200      	movs	r2, #0
 80009c4:	602a      	str	r2, [r5, #0]
 80009c6:	061b      	lsls	r3, r3, #24
 80009c8:	d411      	bmi.n	80009ee <__swhatbuf_r+0x42>
 80009ca:	2380      	movs	r3, #128	; 0x80
 80009cc:	00db      	lsls	r3, r3, #3
 80009ce:	e00f      	b.n	80009f0 <__swhatbuf_r+0x44>
 80009d0:	466a      	mov	r2, sp
 80009d2:	f000 f9bd 	bl	8000d50 <_fstat_r>
 80009d6:	2800      	cmp	r0, #0
 80009d8:	dbf1      	blt.n	80009be <__swhatbuf_r+0x12>
 80009da:	23f0      	movs	r3, #240	; 0xf0
 80009dc:	9901      	ldr	r1, [sp, #4]
 80009de:	021b      	lsls	r3, r3, #8
 80009e0:	4019      	ands	r1, r3
 80009e2:	4b05      	ldr	r3, [pc, #20]	; (80009f8 <__swhatbuf_r+0x4c>)
 80009e4:	18c9      	adds	r1, r1, r3
 80009e6:	424b      	negs	r3, r1
 80009e8:	4159      	adcs	r1, r3
 80009ea:	6029      	str	r1, [r5, #0]
 80009ec:	e7ed      	b.n	80009ca <__swhatbuf_r+0x1e>
 80009ee:	2340      	movs	r3, #64	; 0x40
 80009f0:	2000      	movs	r0, #0
 80009f2:	6023      	str	r3, [r4, #0]
 80009f4:	b016      	add	sp, #88	; 0x58
 80009f6:	bd70      	pop	{r4, r5, r6, pc}
 80009f8:	ffffe000 	.word	0xffffe000

080009fc <__smakebuf_r>:
 80009fc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80009fe:	2602      	movs	r6, #2
 8000a00:	898b      	ldrh	r3, [r1, #12]
 8000a02:	0005      	movs	r5, r0
 8000a04:	000c      	movs	r4, r1
 8000a06:	4233      	tst	r3, r6
 8000a08:	d006      	beq.n	8000a18 <__smakebuf_r+0x1c>
 8000a0a:	0023      	movs	r3, r4
 8000a0c:	3347      	adds	r3, #71	; 0x47
 8000a0e:	6023      	str	r3, [r4, #0]
 8000a10:	6123      	str	r3, [r4, #16]
 8000a12:	2301      	movs	r3, #1
 8000a14:	6163      	str	r3, [r4, #20]
 8000a16:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 8000a18:	466a      	mov	r2, sp
 8000a1a:	ab01      	add	r3, sp, #4
 8000a1c:	f7ff ffc6 	bl	80009ac <__swhatbuf_r>
 8000a20:	9900      	ldr	r1, [sp, #0]
 8000a22:	0007      	movs	r7, r0
 8000a24:	0028      	movs	r0, r5
 8000a26:	f000 f899 	bl	8000b5c <_malloc_r>
 8000a2a:	2800      	cmp	r0, #0
 8000a2c:	d108      	bne.n	8000a40 <__smakebuf_r+0x44>
 8000a2e:	220c      	movs	r2, #12
 8000a30:	5ea3      	ldrsh	r3, [r4, r2]
 8000a32:	059a      	lsls	r2, r3, #22
 8000a34:	d4ef      	bmi.n	8000a16 <__smakebuf_r+0x1a>
 8000a36:	2203      	movs	r2, #3
 8000a38:	4393      	bics	r3, r2
 8000a3a:	431e      	orrs	r6, r3
 8000a3c:	81a6      	strh	r6, [r4, #12]
 8000a3e:	e7e4      	b.n	8000a0a <__smakebuf_r+0xe>
 8000a40:	4b0f      	ldr	r3, [pc, #60]	; (8000a80 <__smakebuf_r+0x84>)
 8000a42:	62ab      	str	r3, [r5, #40]	; 0x28
 8000a44:	2380      	movs	r3, #128	; 0x80
 8000a46:	89a2      	ldrh	r2, [r4, #12]
 8000a48:	6020      	str	r0, [r4, #0]
 8000a4a:	4313      	orrs	r3, r2
 8000a4c:	81a3      	strh	r3, [r4, #12]
 8000a4e:	9b00      	ldr	r3, [sp, #0]
 8000a50:	6120      	str	r0, [r4, #16]
 8000a52:	6163      	str	r3, [r4, #20]
 8000a54:	9b01      	ldr	r3, [sp, #4]
 8000a56:	2b00      	cmp	r3, #0
 8000a58:	d00d      	beq.n	8000a76 <__smakebuf_r+0x7a>
 8000a5a:	0028      	movs	r0, r5
 8000a5c:	230e      	movs	r3, #14
 8000a5e:	5ee1      	ldrsh	r1, [r4, r3]
 8000a60:	f000 f988 	bl	8000d74 <_isatty_r>
 8000a64:	2800      	cmp	r0, #0
 8000a66:	d006      	beq.n	8000a76 <__smakebuf_r+0x7a>
 8000a68:	2203      	movs	r2, #3
 8000a6a:	89a3      	ldrh	r3, [r4, #12]
 8000a6c:	4393      	bics	r3, r2
 8000a6e:	001a      	movs	r2, r3
 8000a70:	2301      	movs	r3, #1
 8000a72:	4313      	orrs	r3, r2
 8000a74:	81a3      	strh	r3, [r4, #12]
 8000a76:	89a0      	ldrh	r0, [r4, #12]
 8000a78:	4307      	orrs	r7, r0
 8000a7a:	81a7      	strh	r7, [r4, #12]
 8000a7c:	e7cb      	b.n	8000a16 <__smakebuf_r+0x1a>
 8000a7e:	46c0      	nop			; (mov r8, r8)
 8000a80:	080007e9 	.word	0x080007e9

08000a84 <_free_r>:
 8000a84:	b570      	push	{r4, r5, r6, lr}
 8000a86:	0005      	movs	r5, r0
 8000a88:	2900      	cmp	r1, #0
 8000a8a:	d010      	beq.n	8000aae <_free_r+0x2a>
 8000a8c:	1f0c      	subs	r4, r1, #4
 8000a8e:	6823      	ldr	r3, [r4, #0]
 8000a90:	2b00      	cmp	r3, #0
 8000a92:	da00      	bge.n	8000a96 <_free_r+0x12>
 8000a94:	18e4      	adds	r4, r4, r3
 8000a96:	0028      	movs	r0, r5
 8000a98:	f000 f992 	bl	8000dc0 <__malloc_lock>
 8000a9c:	4a1d      	ldr	r2, [pc, #116]	; (8000b14 <_free_r+0x90>)
 8000a9e:	6813      	ldr	r3, [r2, #0]
 8000aa0:	2b00      	cmp	r3, #0
 8000aa2:	d105      	bne.n	8000ab0 <_free_r+0x2c>
 8000aa4:	6063      	str	r3, [r4, #4]
 8000aa6:	6014      	str	r4, [r2, #0]
 8000aa8:	0028      	movs	r0, r5
 8000aaa:	f000 f991 	bl	8000dd0 <__malloc_unlock>
 8000aae:	bd70      	pop	{r4, r5, r6, pc}
 8000ab0:	42a3      	cmp	r3, r4
 8000ab2:	d908      	bls.n	8000ac6 <_free_r+0x42>
 8000ab4:	6821      	ldr	r1, [r4, #0]
 8000ab6:	1860      	adds	r0, r4, r1
 8000ab8:	4283      	cmp	r3, r0
 8000aba:	d1f3      	bne.n	8000aa4 <_free_r+0x20>
 8000abc:	6818      	ldr	r0, [r3, #0]
 8000abe:	685b      	ldr	r3, [r3, #4]
 8000ac0:	1841      	adds	r1, r0, r1
 8000ac2:	6021      	str	r1, [r4, #0]
 8000ac4:	e7ee      	b.n	8000aa4 <_free_r+0x20>
 8000ac6:	001a      	movs	r2, r3
 8000ac8:	685b      	ldr	r3, [r3, #4]
 8000aca:	2b00      	cmp	r3, #0
 8000acc:	d001      	beq.n	8000ad2 <_free_r+0x4e>
 8000ace:	42a3      	cmp	r3, r4
 8000ad0:	d9f9      	bls.n	8000ac6 <_free_r+0x42>
 8000ad2:	6811      	ldr	r1, [r2, #0]
 8000ad4:	1850      	adds	r0, r2, r1
 8000ad6:	42a0      	cmp	r0, r4
 8000ad8:	d10b      	bne.n	8000af2 <_free_r+0x6e>
 8000ada:	6820      	ldr	r0, [r4, #0]
 8000adc:	1809      	adds	r1, r1, r0
 8000ade:	1850      	adds	r0, r2, r1
 8000ae0:	6011      	str	r1, [r2, #0]
 8000ae2:	4283      	cmp	r3, r0
 8000ae4:	d1e0      	bne.n	8000aa8 <_free_r+0x24>
 8000ae6:	6818      	ldr	r0, [r3, #0]
 8000ae8:	685b      	ldr	r3, [r3, #4]
 8000aea:	1841      	adds	r1, r0, r1
 8000aec:	6011      	str	r1, [r2, #0]
 8000aee:	6053      	str	r3, [r2, #4]
 8000af0:	e7da      	b.n	8000aa8 <_free_r+0x24>
 8000af2:	42a0      	cmp	r0, r4
 8000af4:	d902      	bls.n	8000afc <_free_r+0x78>
 8000af6:	230c      	movs	r3, #12
 8000af8:	602b      	str	r3, [r5, #0]
 8000afa:	e7d5      	b.n	8000aa8 <_free_r+0x24>
 8000afc:	6821      	ldr	r1, [r4, #0]
 8000afe:	1860      	adds	r0, r4, r1
 8000b00:	4283      	cmp	r3, r0
 8000b02:	d103      	bne.n	8000b0c <_free_r+0x88>
 8000b04:	6818      	ldr	r0, [r3, #0]
 8000b06:	685b      	ldr	r3, [r3, #4]
 8000b08:	1841      	adds	r1, r0, r1
 8000b0a:	6021      	str	r1, [r4, #0]
 8000b0c:	6063      	str	r3, [r4, #4]
 8000b0e:	6054      	str	r4, [r2, #4]
 8000b10:	e7ca      	b.n	8000aa8 <_free_r+0x24>
 8000b12:	46c0      	nop			; (mov r8, r8)
 8000b14:	20000088 	.word	0x20000088

08000b18 <sbrk_aligned>:
 8000b18:	b570      	push	{r4, r5, r6, lr}
 8000b1a:	4e0f      	ldr	r6, [pc, #60]	; (8000b58 <sbrk_aligned+0x40>)
 8000b1c:	000d      	movs	r5, r1
 8000b1e:	6831      	ldr	r1, [r6, #0]
 8000b20:	0004      	movs	r4, r0
 8000b22:	2900      	cmp	r1, #0
 8000b24:	d102      	bne.n	8000b2c <sbrk_aligned+0x14>
 8000b26:	f000 f88f 	bl	8000c48 <_sbrk_r>
 8000b2a:	6030      	str	r0, [r6, #0]
 8000b2c:	0029      	movs	r1, r5
 8000b2e:	0020      	movs	r0, r4
 8000b30:	f000 f88a 	bl	8000c48 <_sbrk_r>
 8000b34:	1c43      	adds	r3, r0, #1
 8000b36:	d00a      	beq.n	8000b4e <sbrk_aligned+0x36>
 8000b38:	2303      	movs	r3, #3
 8000b3a:	1cc5      	adds	r5, r0, #3
 8000b3c:	439d      	bics	r5, r3
 8000b3e:	42a8      	cmp	r0, r5
 8000b40:	d007      	beq.n	8000b52 <sbrk_aligned+0x3a>
 8000b42:	1a29      	subs	r1, r5, r0
 8000b44:	0020      	movs	r0, r4
 8000b46:	f000 f87f 	bl	8000c48 <_sbrk_r>
 8000b4a:	1c43      	adds	r3, r0, #1
 8000b4c:	d101      	bne.n	8000b52 <sbrk_aligned+0x3a>
 8000b4e:	2501      	movs	r5, #1
 8000b50:	426d      	negs	r5, r5
 8000b52:	0028      	movs	r0, r5
 8000b54:	bd70      	pop	{r4, r5, r6, pc}
 8000b56:	46c0      	nop			; (mov r8, r8)
 8000b58:	2000008c 	.word	0x2000008c

08000b5c <_malloc_r>:
 8000b5c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000b5e:	2203      	movs	r2, #3
 8000b60:	1ccb      	adds	r3, r1, #3
 8000b62:	4393      	bics	r3, r2
 8000b64:	3308      	adds	r3, #8
 8000b66:	0006      	movs	r6, r0
 8000b68:	001f      	movs	r7, r3
 8000b6a:	2b0c      	cmp	r3, #12
 8000b6c:	d232      	bcs.n	8000bd4 <_malloc_r+0x78>
 8000b6e:	270c      	movs	r7, #12
 8000b70:	42b9      	cmp	r1, r7
 8000b72:	d831      	bhi.n	8000bd8 <_malloc_r+0x7c>
 8000b74:	0030      	movs	r0, r6
 8000b76:	f000 f923 	bl	8000dc0 <__malloc_lock>
 8000b7a:	4d32      	ldr	r5, [pc, #200]	; (8000c44 <_malloc_r+0xe8>)
 8000b7c:	682b      	ldr	r3, [r5, #0]
 8000b7e:	001c      	movs	r4, r3
 8000b80:	2c00      	cmp	r4, #0
 8000b82:	d12e      	bne.n	8000be2 <_malloc_r+0x86>
 8000b84:	0039      	movs	r1, r7
 8000b86:	0030      	movs	r0, r6
 8000b88:	f7ff ffc6 	bl	8000b18 <sbrk_aligned>
 8000b8c:	0004      	movs	r4, r0
 8000b8e:	1c43      	adds	r3, r0, #1
 8000b90:	d11e      	bne.n	8000bd0 <_malloc_r+0x74>
 8000b92:	682c      	ldr	r4, [r5, #0]
 8000b94:	0025      	movs	r5, r4
 8000b96:	2d00      	cmp	r5, #0
 8000b98:	d14a      	bne.n	8000c30 <_malloc_r+0xd4>
 8000b9a:	6823      	ldr	r3, [r4, #0]
 8000b9c:	0029      	movs	r1, r5
 8000b9e:	18e3      	adds	r3, r4, r3
 8000ba0:	0030      	movs	r0, r6
 8000ba2:	9301      	str	r3, [sp, #4]
 8000ba4:	f000 f850 	bl	8000c48 <_sbrk_r>
 8000ba8:	9b01      	ldr	r3, [sp, #4]
 8000baa:	4283      	cmp	r3, r0
 8000bac:	d143      	bne.n	8000c36 <_malloc_r+0xda>
 8000bae:	6823      	ldr	r3, [r4, #0]
 8000bb0:	3703      	adds	r7, #3
 8000bb2:	1aff      	subs	r7, r7, r3
 8000bb4:	2303      	movs	r3, #3
 8000bb6:	439f      	bics	r7, r3
 8000bb8:	3708      	adds	r7, #8
 8000bba:	2f0c      	cmp	r7, #12
 8000bbc:	d200      	bcs.n	8000bc0 <_malloc_r+0x64>
 8000bbe:	270c      	movs	r7, #12
 8000bc0:	0039      	movs	r1, r7
 8000bc2:	0030      	movs	r0, r6
 8000bc4:	f7ff ffa8 	bl	8000b18 <sbrk_aligned>
 8000bc8:	1c43      	adds	r3, r0, #1
 8000bca:	d034      	beq.n	8000c36 <_malloc_r+0xda>
 8000bcc:	6823      	ldr	r3, [r4, #0]
 8000bce:	19df      	adds	r7, r3, r7
 8000bd0:	6027      	str	r7, [r4, #0]
 8000bd2:	e013      	b.n	8000bfc <_malloc_r+0xa0>
 8000bd4:	2b00      	cmp	r3, #0
 8000bd6:	dacb      	bge.n	8000b70 <_malloc_r+0x14>
 8000bd8:	230c      	movs	r3, #12
 8000bda:	2500      	movs	r5, #0
 8000bdc:	6033      	str	r3, [r6, #0]
 8000bde:	0028      	movs	r0, r5
 8000be0:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8000be2:	6822      	ldr	r2, [r4, #0]
 8000be4:	1bd1      	subs	r1, r2, r7
 8000be6:	d420      	bmi.n	8000c2a <_malloc_r+0xce>
 8000be8:	290b      	cmp	r1, #11
 8000bea:	d917      	bls.n	8000c1c <_malloc_r+0xc0>
 8000bec:	19e2      	adds	r2, r4, r7
 8000bee:	6027      	str	r7, [r4, #0]
 8000bf0:	42a3      	cmp	r3, r4
 8000bf2:	d111      	bne.n	8000c18 <_malloc_r+0xbc>
 8000bf4:	602a      	str	r2, [r5, #0]
 8000bf6:	6863      	ldr	r3, [r4, #4]
 8000bf8:	6011      	str	r1, [r2, #0]
 8000bfa:	6053      	str	r3, [r2, #4]
 8000bfc:	0030      	movs	r0, r6
 8000bfe:	0025      	movs	r5, r4
 8000c00:	f000 f8e6 	bl	8000dd0 <__malloc_unlock>
 8000c04:	2207      	movs	r2, #7
 8000c06:	350b      	adds	r5, #11
 8000c08:	1d23      	adds	r3, r4, #4
 8000c0a:	4395      	bics	r5, r2
 8000c0c:	1aea      	subs	r2, r5, r3
 8000c0e:	429d      	cmp	r5, r3
 8000c10:	d0e5      	beq.n	8000bde <_malloc_r+0x82>
 8000c12:	1b5b      	subs	r3, r3, r5
 8000c14:	50a3      	str	r3, [r4, r2]
 8000c16:	e7e2      	b.n	8000bde <_malloc_r+0x82>
 8000c18:	605a      	str	r2, [r3, #4]
 8000c1a:	e7ec      	b.n	8000bf6 <_malloc_r+0x9a>
 8000c1c:	6862      	ldr	r2, [r4, #4]
 8000c1e:	42a3      	cmp	r3, r4
 8000c20:	d101      	bne.n	8000c26 <_malloc_r+0xca>
 8000c22:	602a      	str	r2, [r5, #0]
 8000c24:	e7ea      	b.n	8000bfc <_malloc_r+0xa0>
 8000c26:	605a      	str	r2, [r3, #4]
 8000c28:	e7e8      	b.n	8000bfc <_malloc_r+0xa0>
 8000c2a:	0023      	movs	r3, r4
 8000c2c:	6864      	ldr	r4, [r4, #4]
 8000c2e:	e7a7      	b.n	8000b80 <_malloc_r+0x24>
 8000c30:	002c      	movs	r4, r5
 8000c32:	686d      	ldr	r5, [r5, #4]
 8000c34:	e7af      	b.n	8000b96 <_malloc_r+0x3a>
 8000c36:	230c      	movs	r3, #12
 8000c38:	0030      	movs	r0, r6
 8000c3a:	6033      	str	r3, [r6, #0]
 8000c3c:	f000 f8c8 	bl	8000dd0 <__malloc_unlock>
 8000c40:	e7cd      	b.n	8000bde <_malloc_r+0x82>
 8000c42:	46c0      	nop			; (mov r8, r8)
 8000c44:	20000088 	.word	0x20000088

08000c48 <_sbrk_r>:
 8000c48:	2300      	movs	r3, #0
 8000c4a:	b570      	push	{r4, r5, r6, lr}
 8000c4c:	4d06      	ldr	r5, [pc, #24]	; (8000c68 <_sbrk_r+0x20>)
 8000c4e:	0004      	movs	r4, r0
 8000c50:	0008      	movs	r0, r1
 8000c52:	602b      	str	r3, [r5, #0]
 8000c54:	f7ff fafc 	bl	8000250 <_sbrk>
 8000c58:	1c43      	adds	r3, r0, #1
 8000c5a:	d103      	bne.n	8000c64 <_sbrk_r+0x1c>
 8000c5c:	682b      	ldr	r3, [r5, #0]
 8000c5e:	2b00      	cmp	r3, #0
 8000c60:	d000      	beq.n	8000c64 <_sbrk_r+0x1c>
 8000c62:	6023      	str	r3, [r4, #0]
 8000c64:	bd70      	pop	{r4, r5, r6, pc}
 8000c66:	46c0      	nop			; (mov r8, r8)
 8000c68:	20000090 	.word	0x20000090

08000c6c <__sread>:
 8000c6c:	b570      	push	{r4, r5, r6, lr}
 8000c6e:	000c      	movs	r4, r1
 8000c70:	250e      	movs	r5, #14
 8000c72:	5f49      	ldrsh	r1, [r1, r5]
 8000c74:	f000 f8b4 	bl	8000de0 <_read_r>
 8000c78:	2800      	cmp	r0, #0
 8000c7a:	db03      	blt.n	8000c84 <__sread+0x18>
 8000c7c:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8000c7e:	181b      	adds	r3, r3, r0
 8000c80:	6563      	str	r3, [r4, #84]	; 0x54
 8000c82:	bd70      	pop	{r4, r5, r6, pc}
 8000c84:	89a3      	ldrh	r3, [r4, #12]
 8000c86:	4a02      	ldr	r2, [pc, #8]	; (8000c90 <__sread+0x24>)
 8000c88:	4013      	ands	r3, r2
 8000c8a:	81a3      	strh	r3, [r4, #12]
 8000c8c:	e7f9      	b.n	8000c82 <__sread+0x16>
 8000c8e:	46c0      	nop			; (mov r8, r8)
 8000c90:	ffffefff 	.word	0xffffefff

08000c94 <__swrite>:
 8000c94:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000c96:	001f      	movs	r7, r3
 8000c98:	898b      	ldrh	r3, [r1, #12]
 8000c9a:	0005      	movs	r5, r0
 8000c9c:	000c      	movs	r4, r1
 8000c9e:	0016      	movs	r6, r2
 8000ca0:	05db      	lsls	r3, r3, #23
 8000ca2:	d505      	bpl.n	8000cb0 <__swrite+0x1c>
 8000ca4:	230e      	movs	r3, #14
 8000ca6:	5ec9      	ldrsh	r1, [r1, r3]
 8000ca8:	2200      	movs	r2, #0
 8000caa:	2302      	movs	r3, #2
 8000cac:	f000 f874 	bl	8000d98 <_lseek_r>
 8000cb0:	89a3      	ldrh	r3, [r4, #12]
 8000cb2:	4a05      	ldr	r2, [pc, #20]	; (8000cc8 <__swrite+0x34>)
 8000cb4:	0028      	movs	r0, r5
 8000cb6:	4013      	ands	r3, r2
 8000cb8:	81a3      	strh	r3, [r4, #12]
 8000cba:	0032      	movs	r2, r6
 8000cbc:	230e      	movs	r3, #14
 8000cbe:	5ee1      	ldrsh	r1, [r4, r3]
 8000cc0:	003b      	movs	r3, r7
 8000cc2:	f000 f81f 	bl	8000d04 <_write_r>
 8000cc6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000cc8:	ffffefff 	.word	0xffffefff

08000ccc <__sseek>:
 8000ccc:	b570      	push	{r4, r5, r6, lr}
 8000cce:	000c      	movs	r4, r1
 8000cd0:	250e      	movs	r5, #14
 8000cd2:	5f49      	ldrsh	r1, [r1, r5]
 8000cd4:	f000 f860 	bl	8000d98 <_lseek_r>
 8000cd8:	89a3      	ldrh	r3, [r4, #12]
 8000cda:	1c42      	adds	r2, r0, #1
 8000cdc:	d103      	bne.n	8000ce6 <__sseek+0x1a>
 8000cde:	4a05      	ldr	r2, [pc, #20]	; (8000cf4 <__sseek+0x28>)
 8000ce0:	4013      	ands	r3, r2
 8000ce2:	81a3      	strh	r3, [r4, #12]
 8000ce4:	bd70      	pop	{r4, r5, r6, pc}
 8000ce6:	2280      	movs	r2, #128	; 0x80
 8000ce8:	0152      	lsls	r2, r2, #5
 8000cea:	4313      	orrs	r3, r2
 8000cec:	81a3      	strh	r3, [r4, #12]
 8000cee:	6560      	str	r0, [r4, #84]	; 0x54
 8000cf0:	e7f8      	b.n	8000ce4 <__sseek+0x18>
 8000cf2:	46c0      	nop			; (mov r8, r8)
 8000cf4:	ffffefff 	.word	0xffffefff

08000cf8 <__sclose>:
 8000cf8:	b510      	push	{r4, lr}
 8000cfa:	230e      	movs	r3, #14
 8000cfc:	5ec9      	ldrsh	r1, [r1, r3]
 8000cfe:	f000 f815 	bl	8000d2c <_close_r>
 8000d02:	bd10      	pop	{r4, pc}

08000d04 <_write_r>:
 8000d04:	b570      	push	{r4, r5, r6, lr}
 8000d06:	0004      	movs	r4, r0
 8000d08:	0008      	movs	r0, r1
 8000d0a:	0011      	movs	r1, r2
 8000d0c:	001a      	movs	r2, r3
 8000d0e:	2300      	movs	r3, #0
 8000d10:	4d05      	ldr	r5, [pc, #20]	; (8000d28 <_write_r+0x24>)
 8000d12:	602b      	str	r3, [r5, #0]
 8000d14:	f7ff fa54 	bl	80001c0 <_write>
 8000d18:	1c43      	adds	r3, r0, #1
 8000d1a:	d103      	bne.n	8000d24 <_write_r+0x20>
 8000d1c:	682b      	ldr	r3, [r5, #0]
 8000d1e:	2b00      	cmp	r3, #0
 8000d20:	d000      	beq.n	8000d24 <_write_r+0x20>
 8000d22:	6023      	str	r3, [r4, #0]
 8000d24:	bd70      	pop	{r4, r5, r6, pc}
 8000d26:	46c0      	nop			; (mov r8, r8)
 8000d28:	20000090 	.word	0x20000090

08000d2c <_close_r>:
 8000d2c:	2300      	movs	r3, #0
 8000d2e:	b570      	push	{r4, r5, r6, lr}
 8000d30:	4d06      	ldr	r5, [pc, #24]	; (8000d4c <_close_r+0x20>)
 8000d32:	0004      	movs	r4, r0
 8000d34:	0008      	movs	r0, r1
 8000d36:	602b      	str	r3, [r5, #0]
 8000d38:	f7ff fa5e 	bl	80001f8 <_close>
 8000d3c:	1c43      	adds	r3, r0, #1
 8000d3e:	d103      	bne.n	8000d48 <_close_r+0x1c>
 8000d40:	682b      	ldr	r3, [r5, #0]
 8000d42:	2b00      	cmp	r3, #0
 8000d44:	d000      	beq.n	8000d48 <_close_r+0x1c>
 8000d46:	6023      	str	r3, [r4, #0]
 8000d48:	bd70      	pop	{r4, r5, r6, pc}
 8000d4a:	46c0      	nop			; (mov r8, r8)
 8000d4c:	20000090 	.word	0x20000090

08000d50 <_fstat_r>:
 8000d50:	2300      	movs	r3, #0
 8000d52:	b570      	push	{r4, r5, r6, lr}
 8000d54:	4d06      	ldr	r5, [pc, #24]	; (8000d70 <_fstat_r+0x20>)
 8000d56:	0004      	movs	r4, r0
 8000d58:	0008      	movs	r0, r1
 8000d5a:	0011      	movs	r1, r2
 8000d5c:	602b      	str	r3, [r5, #0]
 8000d5e:	f7ff fa55 	bl	800020c <_fstat>
 8000d62:	1c43      	adds	r3, r0, #1
 8000d64:	d103      	bne.n	8000d6e <_fstat_r+0x1e>
 8000d66:	682b      	ldr	r3, [r5, #0]
 8000d68:	2b00      	cmp	r3, #0
 8000d6a:	d000      	beq.n	8000d6e <_fstat_r+0x1e>
 8000d6c:	6023      	str	r3, [r4, #0]
 8000d6e:	bd70      	pop	{r4, r5, r6, pc}
 8000d70:	20000090 	.word	0x20000090

08000d74 <_isatty_r>:
 8000d74:	2300      	movs	r3, #0
 8000d76:	b570      	push	{r4, r5, r6, lr}
 8000d78:	4d06      	ldr	r5, [pc, #24]	; (8000d94 <_isatty_r+0x20>)
 8000d7a:	0004      	movs	r4, r0
 8000d7c:	0008      	movs	r0, r1
 8000d7e:	602b      	str	r3, [r5, #0]
 8000d80:	f7ff fa52 	bl	8000228 <_isatty>
 8000d84:	1c43      	adds	r3, r0, #1
 8000d86:	d103      	bne.n	8000d90 <_isatty_r+0x1c>
 8000d88:	682b      	ldr	r3, [r5, #0]
 8000d8a:	2b00      	cmp	r3, #0
 8000d8c:	d000      	beq.n	8000d90 <_isatty_r+0x1c>
 8000d8e:	6023      	str	r3, [r4, #0]
 8000d90:	bd70      	pop	{r4, r5, r6, pc}
 8000d92:	46c0      	nop			; (mov r8, r8)
 8000d94:	20000090 	.word	0x20000090

08000d98 <_lseek_r>:
 8000d98:	b570      	push	{r4, r5, r6, lr}
 8000d9a:	0004      	movs	r4, r0
 8000d9c:	0008      	movs	r0, r1
 8000d9e:	0011      	movs	r1, r2
 8000da0:	001a      	movs	r2, r3
 8000da2:	2300      	movs	r3, #0
 8000da4:	4d05      	ldr	r5, [pc, #20]	; (8000dbc <_lseek_r+0x24>)
 8000da6:	602b      	str	r3, [r5, #0]
 8000da8:	f7ff fa47 	bl	800023a <_lseek>
 8000dac:	1c43      	adds	r3, r0, #1
 8000dae:	d103      	bne.n	8000db8 <_lseek_r+0x20>
 8000db0:	682b      	ldr	r3, [r5, #0]
 8000db2:	2b00      	cmp	r3, #0
 8000db4:	d000      	beq.n	8000db8 <_lseek_r+0x20>
 8000db6:	6023      	str	r3, [r4, #0]
 8000db8:	bd70      	pop	{r4, r5, r6, pc}
 8000dba:	46c0      	nop			; (mov r8, r8)
 8000dbc:	20000090 	.word	0x20000090

08000dc0 <__malloc_lock>:
 8000dc0:	b510      	push	{r4, lr}
 8000dc2:	4802      	ldr	r0, [pc, #8]	; (8000dcc <__malloc_lock+0xc>)
 8000dc4:	f7ff fdef 	bl	80009a6 <__retarget_lock_acquire_recursive>
 8000dc8:	bd10      	pop	{r4, pc}
 8000dca:	46c0      	nop			; (mov r8, r8)
 8000dcc:	20000084 	.word	0x20000084

08000dd0 <__malloc_unlock>:
 8000dd0:	b510      	push	{r4, lr}
 8000dd2:	4802      	ldr	r0, [pc, #8]	; (8000ddc <__malloc_unlock+0xc>)
 8000dd4:	f7ff fde8 	bl	80009a8 <__retarget_lock_release_recursive>
 8000dd8:	bd10      	pop	{r4, pc}
 8000dda:	46c0      	nop			; (mov r8, r8)
 8000ddc:	20000084 	.word	0x20000084

08000de0 <_read_r>:
 8000de0:	b570      	push	{r4, r5, r6, lr}
 8000de2:	0004      	movs	r4, r0
 8000de4:	0008      	movs	r0, r1
 8000de6:	0011      	movs	r1, r2
 8000de8:	001a      	movs	r2, r3
 8000dea:	2300      	movs	r3, #0
 8000dec:	4d05      	ldr	r5, [pc, #20]	; (8000e04 <_read_r+0x24>)
 8000dee:	602b      	str	r3, [r5, #0]
 8000df0:	f7ff f9c9 	bl	8000186 <_read>
 8000df4:	1c43      	adds	r3, r0, #1
 8000df6:	d103      	bne.n	8000e00 <_read_r+0x20>
 8000df8:	682b      	ldr	r3, [r5, #0]
 8000dfa:	2b00      	cmp	r3, #0
 8000dfc:	d000      	beq.n	8000e00 <_read_r+0x20>
 8000dfe:	6023      	str	r3, [r4, #0]
 8000e00:	bd70      	pop	{r4, r5, r6, pc}
 8000e02:	46c0      	nop			; (mov r8, r8)
 8000e04:	20000090 	.word	0x20000090

08000e08 <_init>:
 8000e08:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000e0a:	46c0      	nop			; (mov r8, r8)
 8000e0c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000e0e:	bc08      	pop	{r3}
 8000e10:	469e      	mov	lr, r3
 8000e12:	4770      	bx	lr

08000e14 <_fini>:
 8000e14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000e16:	46c0      	nop			; (mov r8, r8)
 8000e18:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000e1a:	bc08      	pop	{r3}
 8000e1c:	469e      	mov	lr, r3
 8000e1e:	4770      	bx	lr
